{"root":{"data":{"id":"c4j2cwv9vd40","created":1596021373182,"text":"javascript操作符及类型转换"},"children":[{"data":{"id":"c4j2d73um140","created":1596021395468,"text":"一元运算符"},"children":[{"data":{"id":"c4j2jzf6too0","created":1596021927288,"text":"加+","note":"相当于调用number();//将xx变成number类型"},"children":[]},{"data":{"id":"c4j2ke8qamw0","created":1596021959550,"text":"减-","note":"将一元减应用于非数值时，将得到的数值转换为负数"},"children":[]},{"data":{"id":"c4j2mwk90m80","created":1596022156157,"text":"递增与递减操作符","note":"注意：a++不同于++a\n例如：a++ + ++a;a=3\n1.先是执行++a，a自加1并且同时赋值给a\n（此时a的值变为4）\n2.而后再进行a++，但是这时候不会再次对a进行自加，之后在计算完结果之后再对a进行自加（这个时候结果是8，a的值为a+2）\n答案：2*(a+1)\n\t  a：a+2\n      ","background":"#ffffff","color":"#c00000","font-weight":"bold","font-style":"italic"},"children":[]},{"data":{"id":"c4j2rq9zt7k0","created":1596022534297,"text":"赋值运算","note":"+=，*=，-=，/=，%=\n例如：a+=3//a=a+3"},"children":[]}]},{"data":{"id":"c4j2tcd3wdc0","created":1596022660738,"text":"#逻辑运算符(短路运算符(路途短))"},"children":[{"data":{"id":"c4j2tj0cc000","created":1596022675204,"text":"#逻辑与&&(同真才真，有假则假)","note":"同真才真，有假则假\n1.可应用于任意数值。\n如果有一个操作数不是布尔类型，逻辑与就不一定返回boolean类型\n2.如果第一个操作数是：null,NaN,undefined,false,0,\"\"可被转换为false的值时，返回该值\n（第一个数就为消极数据，那么之后的不用看了，直接返回该消极值）\n3.如果第一个数为其他，返回第二个数（如果第一个值正常，那么绝对权就到第二个数中，返回第二个值）\n#例如：\" \" && \"briup\"//\" \""},"children":[]},{"data":{"id":"c4j2x3e80rs0","created":1596022954671,"text":"#逻辑或丨丨(有真则真，同假才假)","note":"1.如果两个操作数都是null,NaN,undefined,false,0,\"\"可被转换为false的值的时候返回该值（都同为一个值的时候返回该值）\n2.如果第一个数是null,NaN,undefined,false,0,\"\"则返回第二个操作数（第一个数并不能决定结果，所以直接返回第二个值）"},"children":[]},{"data":{"id":"c4j35o97y740","created":1596023626995,"text":"非NOT","note":"该操作符应用任何类型数值都返回一个【布尔值】。先将任意类型的数值转换为Boolean，然后取反\n!a ==> !Boolean(a)\n连用两次逻辑非，就可以将任意数据类型转化为Boolean类型\n!!a ==> Boolean(a)"},"children":[]},{"data":{"id":"c4j3i2zss940","created":1596024599447,"text":"三目运算符","note":"age > 18?\"成年人\":\"未成年人\""},"children":[]}]},{"data":{"id":"c4j3jl4r9w00","created":1596024717293,"text":"类型转换"},"children":[{"data":{"id":"c4mbamd8j9k0","created":1596351263454,"text":"1.转换为数字类型","note":"1.Number(a)//只可以转换数字类型\n2.+a\n3.-(-a)\n4.parseInt(a)：\n\t先将a转换为字符串，然后再进行解析\n    例如：parseInt('12true')//12\n    \t  parseInt('12',16)//16进制\n          parseInt('0x12')//能够将0x识别为16进制\n    \t  parseInt('true12')//NaN\n5.parseFloat(a)"},"children":[]},{"data":{"id":"c4mbxdlwrmo0","created":1596353046763,"text":"2.布尔类型","note":"Boolean(a)\n\tfalse:null 0 undedined NaN \"\" Infinity\n    true:{} 1 \"hello\"\n    \n    if(exp1){}\n    exp1 可以是任意数据类型，因为js再执行过程中会自动将其转换为Boolean\n    if(obj !=null){\n    \n    }\n    if(obj){\n    \n    }"},"children":[]},{"data":{"id":"c4mc63u3ihs0","created":1596353730768,"text":"3.字符串类型","note":"String(a)\na+\"\""},"children":[]}]},{"data":{"id":"c4matp0eyyo0","created":1596349937018,"text":"序列化比较属性"},"children":[{"data":{"id":"c4mau5a2nwo0","created":1596349972431,"text":"1.利用json.stringify将值序列化","note":"var a = {name:\"tom\",age:12}\nvar b = {name:\"tom\",age:12}\n\nconsole.log(JSON.stringify(a));\nconsole.log(JSON.stringify(b));\n"},"children":[]},{"data":{"id":"c4maujirbig0","created":1596350003431,"text":"2.对序列化后的字符串进行比较","note":"console.log(JSON.stringify(a) === JSON.stringify(b));//true\n"},"children":[]}]},{"data":{"id":"c4mc6mwoyns0","created":1596353772284,"text":"流程控制语句(API)"},"children":[{"data":{"id":"c4mc6zet7ns0","created":1596353799501,"text":"1.分支语句"},"children":[{"data":{"id":"c4mc76ro7yw0","created":1596353815516,"text":"1.if分支","note":"if(exp){//判断语句\n\t\n}\n如果if和else语句叠加过多，那么就选择switch语句更好"},"children":[]},{"data":{"id":"c4mc7aqmak00","created":1596353824159,"text":"2.switch分支","note":"switch(v){\n\tcase c1:\n    \t...\n        break;\n    case c2:\n    \t...\n        break;\n    case c3:\n    \t...\n        break;\n    default:\n    \t...\n}\n注意：v表示变量\n\t c1，c2，c3，...常量\n     当 v=== c1的时候，执行c1代码块的内容，break表示跳出switch代码块，如果不加break，后续代码都会执行直到遇到break或者switch结束\n     default代码块(default执行条件：如果上述case都不等于switch中的变量时就执行default)可以位于switch中的任意位置，但是要注意，如果不是位于最下方"},"children":[]}]},{"data":{"id":"c4mc73ljt2w0","created":1596353808615,"text":"2.循环语句"},"children":[{"data":{"id":"c4mcs1q8ar40","created":1596355450192,"text":"1.for"},"children":[]},{"data":{"id":"c4mcs3lxd2g0","created":1596355454285,"text":"2.while前置判断循环","note":"初始化条件\nwhile(结束判定条件){\n\t迭代\n}"},"children":[]},{"data":{"id":"c4mcs5jb0ug0","created":1596355458480,"text":"3.do-while","note":"初始化条件\ndo{\n\t迭代\n}while(结束判定条件)；"},"children":[]},{"data":{"id":"c4mcs89ao5s0","created":1596355464406,"text":"4.for-in(遍历数组或对象)"},"children":[]}]}]},{"data":{"id":"c4mdev0zphc0","created":1596357237981,"text":"九九乘法表","note":"\n\tfor(var j=1;j<=9;j++){//定义一共有几行\n\t\n    var msg = \"\"//+“”就可以将数字变为字符串，可以解决数字会自动换行的问题\n    \n    for(var i=1; i<=j;i++){//i<j意思是每一行的列数都不会大于所在行数，比如第四行的列数最大为四\n    \t\n        msg +=(i+\" * \"+j+\" = \"+i*j)+(i*j>9?\" \":\"  \");//三目运算符，如果是一位就打两个空格，如果是两位就打一个空格\n    }\n}"},"children":[]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}